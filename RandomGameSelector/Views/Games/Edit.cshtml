@model RandomGameSelector.Models.GameGenres

@{
    if(Model.Game != null){
        ViewData["Title"] = "Edit - " + Model.Game.Name;
    <h1>Edit</h1>
    }
    else {
        ViewData["Title"] = "Create";
    <h1>Create</h1>
    }
    
}

<h4>@Html.DisplayFor(modelItem => modelItem.Game.Name)</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Game.Id" />
            <div class="form-group">
                <label asp-for="Game.Name" class="control-label"></label>
                <input asp-for="Game.Name" name="name" class="form-control" />       
                <span asp-validation-for="Game.Name" class="text-danger"></span>
                <br />
                <label id="Genres" class="control-label">Genres</label>
                <br />
                <fieldset>
                    @foreach (Genre genre in Model.AllGenres)
                    {
                        <input type="checkbox" value="@genre.Id" name="genres">@genre.Name<br />
                    }
                </fieldset>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ListPage">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
