@using RandomGameSelector.ViewModels
@model GameListPageModel

@{
    ViewData["Title"] = "Random Game Selector";
}

<link rel="stylesheet" href="~/css/listPage.css" asp-append-version="true" />

<h1>Games</h1>

<form asp-controller="Games" asp-action="Index">
    <div>Title:</div>

    <div class="filterContainer">
        
        <div class="filterItem searchContainer">            
            <input type="text" class="searchFilter" name="SearchString" value=@ViewData["SearchString"] !=null ? @ViewData["SearchString"] : "" />
        </div>      
        
        <div class="genresContainer">
            <label for="genres" class="genresLabel">Genres</label>
            <div class="genresCheckboxes" name="genres">
                @{
                    List<int> selectedOptions = ViewData["SelectedOptions"] != null ? ViewData["SelectedOptions"] as List<int> : new List<int>();
                    foreach (Genre genre in Model.Genres)
                    {
                        if (selectedOptions.Contains(genre.Id))
                        {
                            <div class="checkbox">
                                <input type="checkbox" value="@genre.Id" checked name="selectedGenres">
                                <span>@genre.Name</span>
                            </div>
                        }
                        else {
                            <div class="checkbox">
                                <input type="checkbox" value="@genre.Id" name="selectedGenres">
                                <span>@genre.Name</span>
                            </div>
                        }
                    }
                }
            </div>
        </div>       
           
        <input type="submit" class="filterButton" value="Filter" />
    </div>
</form>

<table class="table listTable">
    <thead>
        <tr>
            <th>
                Games
            </th>
            <th>
                Genres
            </th>
            <th>
                Options
            </th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Games.Count(); i++) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => Model.Games[i].Name)
                </td>
                <td>
                    @Model.GameGenres[Model.Games[i].Id]
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@Model.Games[i].Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@Model.Games[i].Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
<div class="links">
    <div>
        <input class="btn btn-primary" type="button" value="Add Game" onclick="location.href='@Url.Action("Create", "Games")'" />
    </div>
    @if (Model.Games.Count() > 0) {
        <div>
            @Html.ActionLink("Select Random Game to Play", "RandomGameSelector", "Games", new {gameIds = Model.Games.Select(game => game.Id).ToList()}, new { @class="btn btn-primary" })
        </div>
    }
    <div>
        <input class="btn btn-primary" type="button" value="Add Genre" onclick="location.href='@Url.Action("Create", "Genres")'" />
    </div>   
</div>

